// Security Rules for Firestore (firestore.rules)
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Locations - enhanced security
    match /locations/{locationId} {
      // Anyone authenticated can read all locations
      allow read: if request.auth != null;
      
      // Only authenticated users can create locations
      allow create: if request.auth != null 
        && request.auth.uid == resource.data.userId
        && validateLocationData(request.resource.data);
      
      // Only location owner can update/delete
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }
    
    // Helper function to validate location data
    function validateLocationData(data) {
      return data.keys().hasAll(['name', 'lat', 'lng', 'state', 'city', 'category', 'addedBy', 'userId'])
        && data.name is string && data.name.size() > 0
        && data.lat is number && data.lat >= -90 && data.lat <= 90
        && data.lng is number && data.lng >= -180 && data.lng <= 180
        && data.state is string && data.state.size() > 0
        && data.city is string && data.city.size() > 0
        && data.category in ['restaurant', 'hotel', 'attraction', 'business', 'landmark', 'other']
        && data.addedBy is string
        && data.userId is string;
    }
  }
}
